タイムラン
	基本機能
		フライング工科トン
		移動方法
		画像背景を変える
	追加機能
		・敵
		・移動距離のスコア
		・移動エフェクト
		・アイテム（ビーム）
		・リザルト画面

詳細
・敵
	右から流れてくる
・アイテム
	アイテムをとるとスコアが増える
	アイテムが流れてくるのでそれを取ることでビームを打つことができる	


import math
import os
import random
import sys
import time
import pygame as pg

WIDTH, HEIGHT = 800, 600
os.chdir(os.path.dirname(os.path.abspath(__file__)))


class Enemy(pg.sprite.Sprite):
    """
    敵機に関するクラス
    """
    imgs = [pg.image.load(f"fig/pg_fall.png") for i in range(1, 4)]
    
    def __init__(self):
        super().__init__()
        self.image = random.choice(__class__.imgs)
        self.rect = self.image.get_rect()
        self.rect.centerx = WIDTH
        self.rect.centery = random.randint(0, HEIGHT)      
        self.vx = 5
        # self.bound = random.randint(50, HEIGHT/2)  # 停止位置
        # self.state = "down"  # 降下状態or停止状態
        # self.interval = random.randint(50, 300)  # 爆弾投下インターバル

    def update(self):
        """
        敵機を速度ベクトルself.vyに基づき移動（降下）させる
        ランダムに決めた停止位置_boundまで降下したら，_stateを停止状態に変更する
        引数 screen：画面Surface
        """
        self.rect.centerx -= self.vx

        if self.rect.right < 0:
            self.rect.left = WIDTH
        # self.rect.centery += self.vy


def main():
    pg.display.set_caption("はばたけ！こうかとん")
    screen = pg.display.set_mode((800, 600))
    clock  = pg.time.Clock()
    bg_img = pg.image.load("fig/pg_space.jpg")
    bg_img2 = pg.transform.flip(bg_img, True, False)
    kk_img = pg.image.load("fig/3.png")
    kk_img = pg.transform.flip(kk_img, True, False)
    kk_img = pg.transform.rotozoom(kk_img, 10,1.0)
    kk_rct = kk_img.get_rect()
    kk_rct.center = 100, 300
    key_lst = pg.key.get_pressed()
    emys = pg.sprite.Group()

    tmr = 0
    d = 0
    while True:
        for event in pg.event.get():
            if event.type == pg.QUIT: 
                return
            elif event.type == pg.KEYDOWN and event.key == pg.K_UP:
                d = -100
                kk_rct.move_ip((0,d))
            elif event.type == pg.KEYDOWN and event.key == pg.K_DOWN:
                d = 100
                kk_rct.move_ip((0,d))

        if tmr % 800 == 0:
            emys.add(Enemy())
            

        x = tmr%2200
        screen.blit(bg_img, [-x, 0])
        screen.blit(bg_img2,[-x+1100,0])
        screen.blit(bg_img, [-x+2200, 0])
        screen.blit(kk_img, kk_rct)
        emys.update()
        emys.draw(screen)
        pg.display.update()
        tmr += 1
        clock.tick(200)


if __name__ == "__main__":
    pg.init()
    main()
    pg.quit()
    sys.exit()


	